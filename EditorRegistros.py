# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'EditorRegistros.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from funciones import *

class Ui_EditorRegistros(object):
    def setupUi(self, EditorRegistros):
        EditorRegistros.setObjectName("EditorRegistros")
        EditorRegistros.resize(648, 408)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(EditorRegistros.sizePolicy().hasHeightForWidth())
        EditorRegistros.setSizePolicy(sizePolicy)
        EditorRegistros.setMinimumSize(QtCore.QSize(648, 408))
        EditorRegistros.setMaximumSize(QtCore.QSize(648, 408))
        font = QtGui.QFont()
        font.setFamily("Segoe MDL2 Assets")
        font.setPointSize(11)
        EditorRegistros.setFont(font)
        self.Combo_Mat = QtWidgets.QComboBox(EditorRegistros)
        self.Combo_Mat.setGeometry(QtCore.QRect(70, 20, 181, 25))
        self.Combo_Mat.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Combo_Mat.setObjectName("Combo_Mat")
        self.Combo_Par = QtWidgets.QComboBox(EditorRegistros)
        self.Combo_Par.setGeometry(QtCore.QRect(330, 20, 101, 25))
        self.Combo_Par.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Combo_Par.setObjectName("Combo_Par")
        self.label = QtWidgets.QLabel(EditorRegistros)
        self.label.setGeometry(QtCore.QRect(10, 20, 61, 21))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(EditorRegistros)
        self.label_2.setGeometry(QtCore.QRect(270, 20, 51, 21))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(EditorRegistros)
        self.label_3.setGeometry(QtCore.QRect(450, 20, 111, 21))
        self.label_3.setObjectName("label_3")
        self.Combo_ParP = QtWidgets.QComboBox(EditorRegistros)
        self.Combo_ParP.setGeometry(QtCore.QRect(560, 20, 71, 25))
        self.Combo_ParP.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Combo_ParP.setObjectName("Combo_ParP")
        self.Bot_BPar = QtWidgets.QPushButton(EditorRegistros)
        self.Bot_BPar.setGeometry(QtCore.QRect(200, 350, 111, 31))
        self.Bot_BPar.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Bot_BPar.setObjectName("Bot_BPar")
        self.Bot_BMat = QtWidgets.QPushButton(EditorRegistros)
        self.Bot_BMat.setGeometry(QtCore.QRect(30, 350, 131, 31))
        self.Bot_BMat.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Bot_BMat.setObjectName("Bot_BMat")
        self.Bot_GCamb = QtWidgets.QPushButton(EditorRegistros)
        self.Bot_GCamb.setGeometry(QtCore.QRect(340, 350, 141, 31))
        self.Bot_GCamb.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Bot_GCamb.setObjectName("Bot_GCamb")
        self.Bot_Sal = QtWidgets.QPushButton(EditorRegistros)
        self.Bot_Sal.setGeometry(QtCore.QRect(510, 350, 111, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.Bot_Sal.setFont(font)
        self.Bot_Sal.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Bot_Sal.setAutoRepeatDelay(300)
        self.Bot_Sal.setObjectName("Bot_Sal")
        self.Text_D1T = QtWidgets.QPlainTextEdit(EditorRegistros)
        self.Text_D1T.setGeometry(QtCore.QRect(180, 186, 121, 31))
        self.Text_D1T.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.Text_D1T.setInputMethodHints(QtCore.Qt.ImhMultiLine)
        self.Text_D1T.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_D1T.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_D1T.setObjectName("Text_D1T")
        self.label_4 = QtWidgets.QLabel(EditorRegistros)
        self.label_4.setGeometry(QtCore.QRect(220, 146, 41, 20))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(EditorRegistros)
        self.label_5.setGeometry(QtCore.QRect(370, 146, 71, 20))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(EditorRegistros)
        self.label_6.setGeometry(QtCore.QRect(530, 146, 61, 20))
        self.label_6.setObjectName("label_6")
        self.Text_D2T = QtWidgets.QPlainTextEdit(EditorRegistros)
        self.Text_D2T.setGeometry(QtCore.QRect(180, 236, 121, 31))
        self.Text_D2T.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.Text_D2T.setInputMethodHints(QtCore.Qt.ImhMultiLine)
        self.Text_D2T.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_D2T.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_D2T.setObjectName("Text_D2T")
        self.Text_DP = QtWidgets.QPlainTextEdit(EditorRegistros)
        self.Text_DP.setGeometry(QtCore.QRect(180, 286, 121, 31))
        self.Text_DP.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.Text_DP.setInputMethodHints(QtCore.Qt.ImhMultiLine)
        self.Text_DP.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_DP.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_DP.setObjectName("Text_DP")
        self.Text_HI1T = QtWidgets.QPlainTextEdit(EditorRegistros)
        self.Text_HI1T.setGeometry(QtCore.QRect(360, 186, 91, 31))
        self.Text_HI1T.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.Text_HI1T.setInputMethodHints(QtCore.Qt.ImhMultiLine)
        self.Text_HI1T.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_HI1T.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_HI1T.setObjectName("Text_HI1T")
        self.Text_HI2T = QtWidgets.QPlainTextEdit(EditorRegistros)
        self.Text_HI2T.setGeometry(QtCore.QRect(360, 236, 91, 31))
        self.Text_HI2T.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.Text_HI2T.setInputMethodHints(QtCore.Qt.ImhMultiLine)
        self.Text_HI2T.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_HI2T.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_HI2T.setObjectName("Text_HI2T")
        self.Text_HIP = QtWidgets.QPlainTextEdit(EditorRegistros)
        self.Text_HIP.setGeometry(QtCore.QRect(360, 286, 91, 31))
        self.Text_HIP.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.Text_HIP.setInputMethodHints(QtCore.Qt.ImhMultiLine)
        self.Text_HIP.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_HIP.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_HIP.setObjectName("Text_HIP")
        self.Text_HF1T = QtWidgets.QPlainTextEdit(EditorRegistros)
        self.Text_HF1T.setGeometry(QtCore.QRect(510, 186, 91, 31))
        self.Text_HF1T.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.Text_HF1T.setInputMethodHints(QtCore.Qt.ImhMultiLine)
        self.Text_HF1T.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_HF1T.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_HF1T.setObjectName("Text_HF1T")
        self.Text_HF2T = QtWidgets.QPlainTextEdit(EditorRegistros)
        self.Text_HF2T.setGeometry(QtCore.QRect(510, 236, 91, 31))
        self.Text_HF2T.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.Text_HF2T.setInputMethodHints(QtCore.Qt.ImhMultiLine)
        self.Text_HF2T.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_HF2T.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_HF2T.setObjectName("Text_HF2T")
        self.Text_HFP = QtWidgets.QPlainTextEdit(EditorRegistros)
        self.Text_HFP.setGeometry(QtCore.QRect(510, 286, 91, 31))
        self.Text_HFP.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.Text_HFP.setInputMethodHints(QtCore.Qt.ImhMultiLine)
        self.Text_HFP.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_HFP.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Text_HFP.setObjectName("Text_HFP")
        self.Label_1C = QtWidgets.QLabel(EditorRegistros)
        self.Label_1C.setGeometry(QtCore.QRect(40, 190, 111, 21))
        self.Label_1C.setObjectName("Label_1C")
        self.Label_2C = QtWidgets.QLabel(EditorRegistros)
        self.Label_2C.setGeometry(QtCore.QRect(40, 240, 111, 21))
        self.Label_2C.setObjectName("Label_2C")
        self.Label_CP = QtWidgets.QLabel(EditorRegistros)
        self.Label_CP.setGeometry(QtCore.QRect(40, 290, 111, 21))
        self.Label_CP.setObjectName("Label_CP")
        self.Label_MatAct = QtWidgets.QLabel(EditorRegistros)
        self.Label_MatAct.setGeometry(QtCore.QRect(0, 80, 641, 51))
        self.Label_MatAct.setMaximumSize(QtCore.QSize(648, 16777215))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.Label_MatAct.setFont(font)
        self.Label_MatAct.setText("")
        self.Label_MatAct.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_MatAct.setObjectName("Label_MatAct")
        self.Combo_Mat.addItems(get_materias())
        self.Combo_Mat.activated.connect(self.llenar_paral)
        self.Combo_Par.activated.connect(self.llenar_pract)
        self.Combo_ParP.activated.connect(self.llenar_info)

        self.retranslateUi(EditorRegistros)
        QtCore.QMetaObject.connectSlotsByName(EditorRegistros)
        self.Bot_Sal.clicked.connect(lambda: EditorRegistros.close())
        self.Bot_BMat.clicked.connect(self.borrar_materia)
        self.Bot_BPar.clicked.connect(self.borrar_paralelo)
        self.Bot_GCamb.clicked.connect(self.guardar_cambios)
        self.Combo_Mat.clearEditText()

        self.label_3.hide()
        self.Combo_ParP.hide()
        self.hide_info()
    
    
    def llenar_paral(self):
        #print(self.Combo_Mat.currentText())
        self.hide_info()
        self.Combo_ParP.hide()
        self.label_3.hide()
        self.Combo_Par.clear()
        self.Combo_Par.clearEditText()
        self.Combo_Par.addItems(get_paralelos(self.Combo_Mat.currentText()))
        
        
        
    
    def llenar_pract(self):
        self.hide_info()
        self.Combo_ParP.clear()
        self.Combo_ParP.hide()
        self.label_3.hide()
        practicos = get_practicos(self.Combo_Mat.currentText(),self.Combo_Par.currentText())
        if len(practicos)!=0:
            self.label_3.show()
            self.Combo_ParP.show()
            self.Combo_ParP.addItems(practicos)
        else:
            self.llenar_info()
    
    def llenar_info(self):
        self.Label_MatAct.show()
        self.label_6.show()
        self.label_5.show()
        self.label_4.show()
        registros_t = get_clasesT(self.Combo_Mat.currentText(),self.Combo_Par.currentText())
        elems = [[self.Label_1C,self.Text_D1T,self.Text_HI1T,self.Text_HF1T],[self.Label_2C,self.Text_D2T,self.Text_HI2T,self.Text_HF2T]]
        for i in range(len(registros_t)):
            cont = 0
            for j in range(len(elems[i])):
                elems[i][j].show()
                if cont>0:
                    
                    elems[i][j].setPlainText(registros_t[i][cont-1])
                cont+=1


        if self.Combo_ParP.isHidden():
            self.Label_MatAct.setText(self.Combo_Mat.currentText()+" Par: " + self.Combo_Par.currentText())
        else:
            self.Label_MatAct.setText(self.Combo_Mat.currentText()+" Par: " + self.Combo_Par.currentText()+ " Pract: " + self.Combo_ParP.currentText())
            registros_p = get_clasesP(self.Combo_Mat.currentText(),self.Combo_Par.currentText(),self.Combo_ParP.currentText())
            cont = 0
            
            for elm in [self.Label_CP,self.Text_DP,self.Text_HIP,self.Text_HFP]:
                elm.show()
                if cont>0:
                    elm.setPlainText(registros_p[0][cont-1])
                cont+=1
            
    
    def hide_info(self):
        elems = [[self.Label_1C,self.Text_D1T,self.Text_HI1T,self.Text_HF1T],[self.Label_2C,self.Text_D2T,self.Text_HI2T,self.Text_HF2T],[self.Label_CP,self.Text_DP,self.Text_HIP,self.Text_HFP]]
        self.label_6.hide()
        self.label_5.hide()
        self.label_4.hide()
        self.Label_MatAct.hide()
        for i in range(3):
            for j in range(4):
                elems[i][j].hide()


    def guardar_cambios(self):
        if self.Label_1C.isHidden():
            boton = QtWidgets.QMessageBox()
            boton.setWindowTitle("Error")
            boton.setIcon(QtWidgets.QMessageBox.Critical)
            boton.setText("No hay datos por modificar")
            x = boton.exec_()

        pass

    def borrar_materia(self):
        
        elim_materia(self.Combo_Mat.currentText())
        self.hide_info()
        boton = QtWidgets.QMessageBox()
        boton.setWindowTitle("Información")
        boton.setIcon(QtWidgets.QMessageBox.Information)
        boton.setText("Materia Eliminada Existosamente.")
        x = boton.exec_()
        self.Combo_Mat.clearEditText()
        self.Combo_Par.clear()
        self.Combo_Par.clearEditText()
        self.Combo_Mat.clear()
        self.Combo_Mat.addItems(get_materias())

    def borrar_paralelo(self):
        if len(get_paralelos(self.Combo_Mat.currentText()))==1:
            self.borrar_materia()
        else:
            elim_paral(self.Combo_Mat.currentText(), self.Combo_Par.currentText())
            self.hide_info()
            boton = QtWidgets.QMessageBox()
            boton.setWindowTitle("Información")
            boton.setIcon(QtWidgets.QMessageBox.Information)
            boton.setText("Paralelo de Eliminado Existosamente.")
            x = boton.exec_()
            self.Combo_Par.clear()
            self.Combo_Par.addItems(get_paralelos(self.Combo_Mat.currentText()))
    
    

    def retranslateUi(self, EditorRegistros):
        _translate = QtCore.QCoreApplication.translate
        EditorRegistros.setWindowTitle(_translate("EditorRegistros", "Editor de Registros"))
        self.label.setText(_translate("EditorRegistros", "Materia"))
        self.label_2.setText(_translate("EditorRegistros", "Paralelo"))
        self.label_3.setText(_translate("EditorRegistros", "Paralelo Práctico"))
        self.Bot_BPar.setText(_translate("EditorRegistros", "Borrar Paralelo"))
        self.Bot_BMat.setText(_translate("EditorRegistros", "Borrar Materia"))
        self.Bot_GCamb.setText(_translate("EditorRegistros", "Guardar Cambios"))
        self.Bot_Sal.setText(_translate("EditorRegistros", "Salir"))
        self.label_4.setText(_translate("EditorRegistros", "Día"))
        self.label_5.setText(_translate("EditorRegistros", "Hora Inicio"))
        self.label_6.setText(_translate("EditorRegistros", "Hora Fin"))
        self.Label_1C.setText(_translate("EditorRegistros", "Primera Clase"))
        self.Label_2C.setText(_translate("EditorRegistros", "Segunda Clase"))
        self.Label_CP.setText(_translate("EditorRegistros", "Clase Práctica"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    EditorRegistros = QtWidgets.QDialog()
    ui = Ui_EditorRegistros()
    ui.setupUi(EditorRegistros)
    EditorRegistros.show()
    sys.exit(app.exec_())
